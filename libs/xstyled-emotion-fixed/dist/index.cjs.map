{"version":3,"file":"index.cjs","sources":["../src/colorModes.tsx","../src/breakpoints.ts","../src/theme.ts","../src/preflight.tsx","../src/createCssFunction.ts","../src/emStyled.ts","../src/createStyled.ts","../src/createX.ts","../src/createCreateGlobalStyle.tsx","../src/createCx.ts","../src/createJsx.ts","../src/create.ts","../src/index.ts"],"sourcesContent":["import * as React from 'react'\nimport { ThemeContext, Global, ThemeProvider } from '@emotion/react'\nimport { createColorModeProvider, createColorStyles } from '@xstyled/core'\n\nfunction ColorModeStyle({ targetSelector }: { targetSelector?: string }) {\n  const colorModeStyles = React.useCallback(\n    (theme) => createColorStyles(theme, { targetSelector }),\n    [targetSelector],\n  )\n  return <Global styles={colorModeStyles} />\n}\n\nexport const ColorModeProvider = createColorModeProvider({\n  ThemeContext,\n  ThemeProvider,\n  ColorModeStyle,\n})\n\nexport {\n  useColorMode,\n  getColorModeInitScriptElement,\n  getColorModeInitScriptTag,\n} from '@xstyled/core'\n","import {\n  useThemeScreens,\n  useThemeBreakpoint,\n  useThemeUp,\n  useThemeDown,\n} from '@xstyled/core'\nimport { Screens } from '@xstyled/system'\nimport { useTheme } from '@emotion/react'\n\nexport { useViewportWidth } from '@xstyled/core'\n\nexport const useScreens = (): Screens => useThemeScreens(useTheme())\n\nexport const useBreakpoint = (): string | null => useThemeBreakpoint(useTheme())\n\nexport const useUp = (key: string | number): boolean =>\n  useThemeUp(useTheme(), key)\n\nexport const useDown = (key: string | number): boolean =>\n  useThemeDown(useTheme(), key)\n","import { useTheme } from '@emotion/react'\nimport { createUseGetter } from '@xstyled/core'\nimport { th } from '@xstyled/system'\n\nexport { useTheme }\n\nexport const useTh = createUseGetter(th, useTheme)\n\nexport const useAngle = createUseGetter(th.angle, useTheme)\nexport const useAnimation = createUseGetter(th.animation, useTheme)\nexport const useBorder = createUseGetter(th.border, useTheme)\nexport const useBorderColor = createUseGetter(th.borderColor, useTheme)\nexport const useBorderStyle = createUseGetter(th.borderStyle, useTheme)\nexport const useBorderWidth = createUseGetter(th.borderWidth, useTheme)\nexport const useColor = createUseGetter(th.color, useTheme)\nexport const useDuration = createUseGetter(th.duration, useTheme)\nexport const useFont = createUseGetter(th.font, useTheme)\nexport const useFontSize = createUseGetter(th.fontSize, useTheme)\nexport const useFontWeight = createUseGetter(th.fontWeight, useTheme)\nexport const useInset = createUseGetter(th.inset, useTheme)\nexport const useLetterSpacing = createUseGetter(th.letterSpacing, useTheme)\nexport const useLineHeight = createUseGetter(th.lineHeight, useTheme)\nexport const usePercent = createUseGetter(th.percent, useTheme)\nexport const usePx = createUseGetter(th.px, useTheme)\nexport const useRadius = createUseGetter(th.radius, useTheme)\nexport const useRingWidth = createUseGetter(th.ringWidth, useTheme)\nexport const useShadow = createUseGetter(th.shadow, useTheme)\nexport const useSize = createUseGetter(th.size, useTheme)\nexport const useSpace = createUseGetter(th.space, useTheme)\nexport const useTimingFunction = createUseGetter(th.timingFunction, useTheme)\nexport const useTransform = createUseGetter(th.transform, useTheme)\nexport const useTransition = createUseGetter(th.transition, useTheme)\nexport const useTransitionProperty = createUseGetter(\n  th.transitionProperty,\n  useTheme,\n)\nexport const useZIndex = createUseGetter(th.zIndex, useTheme)\n","import * as React from 'react'\nimport { Global, useTheme } from '@emotion/react'\nimport { getPreflightStyles } from '@xstyled/system'\n\nexport const Preflight: React.FC = () => {\n  const theme = useTheme()\n  return <Global styles={getPreflightStyles(theme)} />\n}\n","import { css as emCss, SerializedStyles, Theme } from '@emotion/react'\nimport { CSSInterpolation } from '@emotion/serialize'\nimport { StyleGenerator } from '@xstyled/system'\nimport { createTransform } from '@xstyled/core'\n\nconst styleToString = (style: any, props: any): any => {\n  if (Array.isArray(style))\n    return style.reduce((str, style) => str + styleToString(style, props), '')\n  if (typeof style === 'function') return styleToString(style(props), props)\n  return style\n}\n\ninterface Props {\n  theme?: Theme\n}\n\ninterface CSSInterpolationFn {\n  (props: Props): CSSInterpolation\n}\n\nexport interface SerializedStylesFn {\n  (props: Props): SerializedStyles\n}\n\nexport interface XCSSFunction {\n  (fn: CSSInterpolationFn): SerializedStylesFn\n  (...args: CSSInterpolation[]): SerializedStylesFn\n  (\n    strings: TemplateStringsArray,\n    ...rawArgs: CSSInterpolation[]\n  ): SerializedStylesFn\n  (\n    strings: TemplateStringsArray | CSSInterpolation | CSSInterpolationFn,\n    ...rawArgs: CSSInterpolation[]\n  ): SerializedStylesFn\n}\n\nexport const createCssFunction = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XCSSFunction => {\n  const transform = createTransform(generator)\n  return ((\n    strings: TemplateStringsArray | CSSInterpolation | CSSInterpolationFn,\n    ...rawArgs: CSSInterpolation[]\n  ): SerializedStylesFn => {\n    return (props: Props): SerializedStyles => {\n      const emCssArgs =\n        typeof strings === 'function'\n          ? emCss(strings(props))\n          : emCss(\n              strings as TemplateStringsArray,\n              ...rawArgs.map((arg) => {\n                // @ts-expect-error\n                if (typeof arg === 'function') return arg(props)\n                return arg\n              }),\n            )\n      return {\n        ...emCssArgs,\n        styles: styleToString(transform(emCssArgs.styles), props),\n      }\n    }\n  }) as XCSSFunction\n}\n","import styled from '@emotion/styled'\n\n// Provide interop since `@emotion/styled` does not work out of the box with ESM\nexport const emStyled =\n  // @ts-ignore\n  typeof styled === 'function' ? styled : styled.default\n","import * as React from 'react'\nimport { CreateStyledComponent, CreateStyled } from '@emotion/styled'\nimport { Theme } from '@emotion/react'\nimport { StyleGenerator, StyleGeneratorProps } from '@xstyled/system'\nimport { BoxElements } from '@xstyled/core'\nimport { createCssFunction, XCSSFunction } from './createCssFunction'\nimport { emStyled } from './emStyled'\n\nconst flattenArgs = (arg: any, props: any): any => {\n  if (typeof arg === 'function') return flattenArgs(arg(props), props)\n  if (Array.isArray(arg)) return arg.map((arg) => flattenArgs(arg, props))\n  return arg\n}\n\nconst getCreateStyle = (\n  baseCreateStyle: any,\n  css: XCSSFunction,\n  generator?: StyleGenerator,\n) => {\n  if (!generator) {\n    return (strings: any, ...args: any) =>\n      baseCreateStyle((props: any) =>\n        css(strings, ...flattenArgs(args, props))(props),\n      )\n  }\n  return (strings: any, ...args: any) => {\n    if (Array.isArray(strings)) {\n      // The tagged template literal should receive an equal number of\n      // additional separators.\n      strings = [...strings, '\\n']\n    }\n    args = [...args, generator]\n    return baseCreateStyle((props: any) =>\n      css(strings, ...flattenArgs(args, props))(props),\n    )\n  }\n}\n\ntype BoxStyledTags<TProps extends object> = {\n  [Tag in keyof BoxElements]: CreateStyledComponent<\n    TProps & { as?: React.ElementType; theme?: Theme },\n    JSX.IntrinsicElements[BoxElements[Tag]]\n  >\n}\n\nexport interface XStyled<TGen extends StyleGenerator>\n  extends CreateStyled,\n    BoxStyledTags<StyleGeneratorProps<TGen>> {}\n\nconst createShouldForwardProp = (\n  generator: StyleGenerator,\n): ((prop: string) => boolean) => {\n  const propSet = new Set<string>(generator.meta.props)\n  return (prop: string) =>\n    prop !== 'as' && !prop.startsWith('$') && !propSet.has(prop)\n}\n\nexport const createBaseStyled = <TGen extends StyleGenerator>(\n  css: XCSSFunction,\n  generator?: TGen,\n): XStyled<TGen> => {\n  const defaultOptions = generator\n    ? {\n        shouldForwardProp: createShouldForwardProp(generator),\n      }\n    : {}\n  return ((component: any, options: any) =>\n    getCreateStyle(\n      emStyled(component, { ...defaultOptions, ...options }),\n      css,\n      generator,\n    )) as XStyled<TGen>\n}\n\nexport const createStyled = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XStyled<TGen> => {\n  const css = createCssFunction(generator)\n  const styled = createBaseStyled(css)\n  const xstyled = createBaseStyled(css, generator)\n  styled.box = xstyled('div')\n  Object.keys(emStyled).forEach((key) => {\n    // @ts-ignore\n    styled[key] = styled(key)\n    // @ts-ignore\n    styled[`${key}Box`] = xstyled(key)\n  })\n  return styled\n}\n","import * as React from 'react'\nimport { Theme } from '@emotion/react'\nimport { StyledComponent } from '@emotion/styled'\nimport { StyleGenerator, StyleGeneratorProps } from '@xstyled/system'\nimport { createBaseStyled } from './createStyled'\nimport { createCssFunction } from './createCssFunction'\nimport { emStyled } from './emStyled'\n\ntype JSXElementKeys = keyof JSX.IntrinsicElements\n\nexport type X<TGen extends StyleGenerator> = {\n  [Key in JSXElementKeys]: StyledComponent<\n    StyleGeneratorProps<TGen> & { as?: React.ElementType; theme?: Theme },\n    Omit<JSX.IntrinsicElements[Key], 'color'>\n  >\n}\n\nexport const createX = <TGen extends StyleGenerator>(\n  generator: TGen,\n): X<TGen> => {\n  const styled = createBaseStyled(createCssFunction(generator), generator)\n  const x = {} as X<TGen>\n  Object.keys(emStyled).forEach((tag) => {\n    // @ts-ignore\n    x[tag] = styled(tag)``\n  })\n  return x\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport * as React from 'react'\nimport { Global, useTheme } from '@emotion/react'\nimport { StyleGenerator } from '@xstyled/system'\nimport { createCssFunction, XCSSFunction } from './createCssFunction'\n\nexport interface XCreateGlobalStyle {\n  <P extends object = {}>(...styles: Parameters<XCSSFunction>): React.FC<P>\n}\n\nexport const createCreateGlobalStyle = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XCreateGlobalStyle => {\n  const css = createCssFunction(generator)\n  return <P extends object = {}>(...styles: Parameters<typeof css>) => {\n    const GlobalStyle = (props: P) => {\n      const theme = useTheme()\n      return <Global styles={css(...styles)({ theme, ...props })} />\n    }\n    GlobalStyle.displayName = 'GlobalStyle'\n    return GlobalStyle\n  }\n}\n","import { cascade, flatten, string } from '@xstyled/util'\nimport { Theme, StyleGenerator } from '@xstyled/system'\nimport { createCssFunction, SerializedStylesFn } from './createCssFunction'\n\nexport interface Cx {\n  (styles: SerializedStylesFn | SerializedStylesFn[]):\n    | string\n    | ((theme: Theme) => any)\n}\n\nexport const createCx = <TGen extends StyleGenerator>(generator: TGen): Cx => {\n  const css = createCssFunction(generator)\n  return (styles: SerializedStylesFn | SerializedStylesFn[]) => {\n    if (string(styles)) return styles\n    return (theme: Theme) => {\n      const p = { theme }\n\n      const parseStyle = (style: any) => {\n        if (typeof style === 'object') {\n          style = css(style)\n        }\n        return cascade(style, p)\n      }\n\n      if (Array.isArray(styles)) {\n        return flatten(styles).map(parseStyle)\n      }\n\n      return parseStyle(styles)\n    }\n  }\n}\n","/* eslint-disable prefer-rest-params */\nimport * as React from 'react'\nimport { jsx as emJsx } from '@emotion/react'\nimport { StyleGenerator } from '@xstyled/system'\nimport { createCx } from './createCx'\n\nexport type XJsx = typeof emJsx\n\nexport const createJsx = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XJsx => {\n  const cx = createCx(generator)\n  return function jsx(\n    type: React.ElementType,\n    props?: object,\n    ...children: React.ReactNode[]\n  ) {\n    if (props == null || !Object.prototype.hasOwnProperty.call(props, 'css')) {\n      // @ts-expect-error\n      return React.createElement.apply(undefined, arguments, ...children)\n    }\n\n    // @ts-expect-error\n    return emJsx(type, { ...props, css: cx(props.css) }, ...children)\n  } as XJsx\n}\n","import { StyleGenerator } from '@xstyled/system'\nimport { createCssFunction, XCSSFunction } from './createCssFunction'\nimport { createX, X } from './createX'\nimport { createStyled, XStyled } from './createStyled'\nimport {\n  createCreateGlobalStyle,\n  XCreateGlobalStyle,\n} from './createCreateGlobalStyle'\nimport { createCx, Cx } from './createCx'\nimport { createJsx, XJsx } from './createJsx'\n\ninterface XStyledSet<TGen extends StyleGenerator> {\n  css: XCSSFunction\n  x: X<TGen>\n  styled: XStyled<TGen>\n  createGlobalStyle: XCreateGlobalStyle\n  cx: Cx\n  jsx: XJsx\n}\n\nexport const createCss = <TGen extends StyleGenerator>(\n  generator: TGen,\n): XStyledSet<TGen> => {\n  return {\n    css: createCssFunction(generator),\n    x: createX(generator),\n    styled: createStyled(generator),\n    createGlobalStyle: createCreateGlobalStyle(generator),\n    cx: createCx(generator),\n    jsx: createJsx(generator),\n  }\n}\n","export * from './colorModes'\nexport {\n  withEmotionCache,\n  CacheProvider,\n  ThemeContext,\n  Global,\n  ClassNames,\n  keyframes,\n  ThemeProvider,\n  withTheme,\n} from '@emotion/react'\nexport * from './breakpoints'\nexport * from './theme'\nexport * from './preflight'\nexport * from '@xstyled/system'\nexport * from './create'\n\n// Create and export default system\nimport { system } from '@xstyled/system'\nimport { createCss } from './create'\n\nconst { css, styled, x, createGlobalStyle, cx, jsx } = createCss(system)\nexport { css, styled as default, x, createGlobalStyle, cx, jsx }\n"],"names":["React","createColorStyles","Global","createColorModeProvider","ThemeContext","ThemeProvider","useThemeScreens","useTheme","useThemeBreakpoint","useThemeUp","useThemeDown","createUseGetter","th","getPreflightStyles","__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","__spreadProps","createTransform","emCss","styled","string","cascade","flatten","emJsx","system"],"mappings":"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"}